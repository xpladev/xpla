syntax = "proto3";
package xpla.reward.v1beta1;

option go_package = "github.com/xpladev/xpla/x/reward/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "xpla/reward/v1beta1/reward.proto";
import "amino/amino.proto";

// Msg defines the reawrd Msg service.
service Msg {
  // MsgFundRewardPool defines a method to allow an account to directly
  // fund the reward pool.
  rpc FundRewardPool(MsgFundRewardPool) returns (MsgFundRewardPoolResponse);

  // UpdateParams defined a governance operation for updating the x/reward
  // module parameters. The authority is hard-coded to the Cosmos SDK x/gov
  // module account
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgFundRewardPool allows an account to directly
// fund the reward pool.
message MsgFundRewardPool {
  option (amino.name) = "xpladev/MsgFundRewardPool";
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  repeated cosmos.base.v1beta1.Coin amount = 1 [
    (gogoproto.nullable) = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  string depositor = 2;
}

// MsgFundRewardPoolResponse defines the Msg/FundRewardPool response type.
message MsgFundRewardPoolResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type for reward parameters.
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the x/evm parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}