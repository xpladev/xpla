syntax = "proto3";
package xpla.burn.v1beta1;

option go_package = "github.com/xpladev/xpla/x/burn/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";

// Msg defines the burn service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // Burn defines a method for burning coins from an account.
  rpc Burn(MsgBurn) returns (MsgBurnResponse);
}

// MsgBurn represents a message to burn coins from an account.
message MsgBurn {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "xpladev/MsgBurn";
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_getters) = false;

  // authority is the address of the governance account.
  string authority = 1 [
    (cosmos_proto.scalar) = "cosmos.AddressString",
    (gogoproto.moretags) = "yaml:\"authority\""
  ];
  repeated cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
}

// MsgBurnResponse defines the Msg/Burn response type.
message MsgBurnResponse {}